Resources:
  vpcA2121C38:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: MySubStack/vpc
    Metadata:
      aws:cdk:path: MySubStack/vpc/Resource
  vpcPublicSubnet1Subnet2E65531E:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.0/18
      VpcId:
        Ref: vpcA2121C38
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: MySubStack/vpc/PublicSubnet1
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
    Metadata:
      aws:cdk:path: MySubStack/vpc/PublicSubnet1/Subnet
  vpcPublicSubnet1RouteTable48A2DF9B:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: vpcA2121C38
      Tags:
        - Key: Name
          Value: MySubStack/vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: MySubStack/vpc/PublicSubnet1/RouteTable
  vpcPublicSubnet1RouteTableAssociation5D3F4579:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: vpcPublicSubnet1RouteTable48A2DF9B
      SubnetId:
        Ref: vpcPublicSubnet1Subnet2E65531E
    Metadata:
      aws:cdk:path: MySubStack/vpc/PublicSubnet1/RouteTableAssociation
  vpcPublicSubnet1DefaultRoute10708846:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: vpcPublicSubnet1RouteTable48A2DF9B
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: vpcIGWE57CBDCA
    DependsOn:
      - vpcVPCGW7984C166
    Metadata:
      aws:cdk:path: MySubStack/vpc/PublicSubnet1/DefaultRoute
  vpcPublicSubnet1EIPDA49DCBE:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
    Metadata:
      aws:cdk:path: MySubStack/vpc/PublicSubnet1/EIP
  vpcPublicSubnet1NATGateway9C16659E:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - vpcPublicSubnet1EIPDA49DCBE
          - AllocationId
      SubnetId:
        Ref: vpcPublicSubnet1Subnet2E65531E
      Tags:
        - Key: Name
          Value: MySubStack/vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: MySubStack/vpc/PublicSubnet1/NATGateway
  vpcPublicSubnet2Subnet009B674F:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.64.0/18
      VpcId:
        Ref: vpcA2121C38
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: MySubStack/vpc/PublicSubnet2
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
    Metadata:
      aws:cdk:path: MySubStack/vpc/PublicSubnet2/Subnet
  vpcPublicSubnet2RouteTableEB40D4CB:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: vpcA2121C38
      Tags:
        - Key: Name
          Value: MySubStack/vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: MySubStack/vpc/PublicSubnet2/RouteTable
  vpcPublicSubnet2RouteTableAssociation21F81B59:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: vpcPublicSubnet2RouteTableEB40D4CB
      SubnetId:
        Ref: vpcPublicSubnet2Subnet009B674F
    Metadata:
      aws:cdk:path: MySubStack/vpc/PublicSubnet2/RouteTableAssociation
  vpcPublicSubnet2DefaultRouteA1EC0F60:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: vpcPublicSubnet2RouteTableEB40D4CB
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: vpcIGWE57CBDCA
    DependsOn:
      - vpcVPCGW7984C166
    Metadata:
      aws:cdk:path: MySubStack/vpc/PublicSubnet2/DefaultRoute
  vpcPublicSubnet2EIP9B3743B1:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
    Metadata:
      aws:cdk:path: MySubStack/vpc/PublicSubnet2/EIP
  vpcPublicSubnet2NATGateway9B8AE11A:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - vpcPublicSubnet2EIP9B3743B1
          - AllocationId
      SubnetId:
        Ref: vpcPublicSubnet2Subnet009B674F
      Tags:
        - Key: Name
          Value: MySubStack/vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: MySubStack/vpc/PublicSubnet2/NATGateway
  vpcPrivateSubnet1Subnet934893E8:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.128.0/18
      VpcId:
        Ref: vpcA2121C38
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: MySubStack/vpc/PrivateSubnet1
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
    Metadata:
      aws:cdk:path: MySubStack/vpc/PrivateSubnet1/Subnet
  vpcPrivateSubnet1RouteTableB41A48CC:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: vpcA2121C38
      Tags:
        - Key: Name
          Value: MySubStack/vpc/PrivateSubnet1
    Metadata:
      aws:cdk:path: MySubStack/vpc/PrivateSubnet1/RouteTable
  vpcPrivateSubnet1RouteTableAssociation67945127:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: vpcPrivateSubnet1RouteTableB41A48CC
      SubnetId:
        Ref: vpcPrivateSubnet1Subnet934893E8
    Metadata:
      aws:cdk:path: MySubStack/vpc/PrivateSubnet1/RouteTableAssociation
  vpcPrivateSubnet1DefaultRoute1AA8E2E5:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: vpcPrivateSubnet1RouteTableB41A48CC
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: vpcPublicSubnet1NATGateway9C16659E
    Metadata:
      aws:cdk:path: MySubStack/vpc/PrivateSubnet1/DefaultRoute
  vpcPrivateSubnet2Subnet7031C2BA:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.192.0/18
      VpcId:
        Ref: vpcA2121C38
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: MySubStack/vpc/PrivateSubnet2
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
    Metadata:
      aws:cdk:path: MySubStack/vpc/PrivateSubnet2/Subnet
  vpcPrivateSubnet2RouteTable7280F23E:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: vpcA2121C38
      Tags:
        - Key: Name
          Value: MySubStack/vpc/PrivateSubnet2
    Metadata:
      aws:cdk:path: MySubStack/vpc/PrivateSubnet2/RouteTable
  vpcPrivateSubnet2RouteTableAssociation007E94D3:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: vpcPrivateSubnet2RouteTable7280F23E
      SubnetId:
        Ref: vpcPrivateSubnet2Subnet7031C2BA
    Metadata:
      aws:cdk:path: MySubStack/vpc/PrivateSubnet2/RouteTableAssociation
  vpcPrivateSubnet2DefaultRouteB0E07F99:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: vpcPrivateSubnet2RouteTable7280F23E
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: vpcPublicSubnet2NATGateway9B8AE11A
    Metadata:
      aws:cdk:path: MySubStack/vpc/PrivateSubnet2/DefaultRoute
  vpcIGWE57CBDCA:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: MySubStack/vpc
    Metadata:
      aws:cdk:path: MySubStack/vpc/IGW
  vpcVPCGW7984C166:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: vpcA2121C38
      InternetGatewayId:
        Ref: vpcIGWE57CBDCA
    Metadata:
      aws:cdk:path: MySubStack/vpc/VPCGW
  cert56CA94EB:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: google.com
      DomainValidationOptions:
        - DomainName: google.com
          ValidationDomain: google.com
      ValidationMethod: DNS
    Metadata:
      aws:cdk:path: MySubStack/cert/Resource
  loadbalancer25023A58:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internal
      SecurityGroups:
        - Fn::GetAtt:
            - loadbalancerSecurityGroup2D54D16B
            - GroupId
      Subnets:
        - Ref: vpcPrivateSubnet1Subnet934893E8
        - Ref: vpcPrivateSubnet2Subnet7031C2BA
      Type: application
    Metadata:
      aws:cdk:path: MySubStack/load_balancer/Resource
  loadbalancerSecurityGroup2D54D16B:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Automatically created Security Group for ELB MySubStackloadbalancer2DFA51F9
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: Allow from anyone on port 80
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
        - CidrIp: 0.0.0.0/0
          Description: Allow from anyone on port 443
          FromPort: 443
          IpProtocol: tcp
          ToPort: 443
        - CidrIp: 0.0.0.0/0
          Description: Allow from anyone on port 8000
          FromPort: 8000
          IpProtocol: tcp
          ToPort: 8000
        - CidrIp: 0.0.0.0/0
          Description: Allow from anyone on port 44300
          FromPort: 44300
          IpProtocol: tcp
          ToPort: 44300
      VpcId:
        Ref: vpcA2121C38
    Metadata:
      aws:cdk:path: MySubStack/load_balancer/SecurityGroup/Resource
  loadbalancerSecurityGrouptoMySubStackFargateServiceSecurityGroup9BB5C08280B3874E5A:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId:
        Fn::GetAtt:
          - loadbalancerSecurityGroup2D54D16B
          - GroupId
      IpProtocol: tcp
      Description: Load balancer to target
      DestinationSecurityGroupId:
        Fn::GetAtt:
          - FargateServiceSecurityGroup08F9A07A
          - GroupId
      FromPort: 80
      ToPort: 80
    Metadata:
      aws:cdk:path: MySubStack/load_balancer/SecurityGroup/to MySubStackFargateServiceSecurityGroup9BB5C082:80
  loadbalancerlistener1FDC26F9D:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - RedirectConfig:
            Host: "#{host}"
            Path: /#{path}
            Port: "443"
            Protocol: HTTPS
            Query: "#{query}"
            StatusCode: HTTP_301
          Type: redirect
      LoadBalancerArn:
        Ref: loadbalancer25023A58
      Port: 80
      Protocol: HTTP
    Metadata:
      aws:cdk:path: MySubStack/load_balancer/listener1/Resource
  loadbalancerlistener281366178:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn:
            Ref: targetgroup12BF71080
          Type: forward
      LoadBalancerArn:
        Ref: loadbalancer25023A58
      Port: 443
      Protocol: HTTPS
      Certificates:
        - CertificateArn:
            Ref: cert56CA94EB
    Metadata:
      aws:cdk:path: MySubStack/load_balancer/listener2/Resource
  loadbalancerlistener3D68132A9:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - RedirectConfig:
            Host: "#{host}"
            Path: /#{path}
            Port: "44300"
            Protocol: HTTPS
            Query: "#{query}"
            StatusCode: HTTP_301
          Type: redirect
      LoadBalancerArn:
        Ref: loadbalancer25023A58
      Port: 8000
      Protocol: HTTP
    Metadata:
      aws:cdk:path: MySubStack/load_balancer/listener3/Resource
  loadbalancerlistener439863C5A:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn:
            Ref: targetgroup21AA3854D
          Type: forward
      LoadBalancerArn:
        Ref: loadbalancer25023A58
      Port: 44300
      Protocol: HTTPS
      Certificates:
        - CertificateArn:
            Ref: cert56CA94EB
    Metadata:
      aws:cdk:path: MySubStack/load_balancer/listener4/Resource
  loadbalancerPublicListener860D2FC5:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn:
            Ref: loadbalancerPublicListenerECSGroup4FB31324
          Type: forward
      LoadBalancerArn:
        Ref: loadbalancer25023A58
      Port: 80
      Protocol: HTTP
    Metadata:
      aws:cdk:path: MySubStack/load_balancer/PublicListener/Resource
  loadbalancerPublicListenerECSGroup4FB31324:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Port: 80
      Protocol: HTTP
      TargetType: ip
      VpcId:
        Ref: vpcA2121C38
    Metadata:
      aws:cdk:path: MySubStack/load_balancer/PublicListener/ECSGroup/Resource
  targetgroup12BF71080:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Port: 80
      Protocol: HTTP
      TargetType: ip
      VpcId:
        Ref: vpcA2121C38
    Metadata:
      aws:cdk:path: MySubStack/target_group1/Resource
  targetgroup21AA3854D:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Port: 80
      Protocol: HTTP
      TargetType: ip
      VpcId:
        Ref: vpcA2121C38
    Metadata:
      aws:cdk:path: MySubStack/target_group2/Resource
  TaskTaskRoleE98524A1:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: MySubStack/Task/TaskRole/Resource
  Task79114B6B:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Essential: true
          Image: nginx:latest
          Name: Container
          PortMappings:
            - ContainerPort: 80
              Protocol: tcp
      Cpu: "256"
      Family: MySubStackTask8C8A7CB0
      Memory: "512"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      TaskRoleArn:
        Fn::GetAtt:
          - TaskTaskRoleE98524A1
          - Arn
    Metadata:
      aws:cdk:path: MySubStack/Task/Resource
  FargateService1DAE5452:
    Type: AWS::ECS::Service
    Properties:
      TaskDefinition:
        Ref: Task79114B6B
      Cluster:
        Ref: EcsDefaultClusterMnL3mNNYN926A5246
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      DesiredCount: 1
      EnableECSManagedTags: false
      HealthCheckGracePeriodSeconds: 60
      LaunchType: FARGATE
      LoadBalancers:
        - ContainerName: Container
          ContainerPort: 80
          TargetGroupArn:
            Ref: loadbalancerPublicListenerECSGroup4FB31324
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - Fn::GetAtt:
                - FargateServiceSecurityGroup08F9A07A
                - GroupId
          Subnets:
            - Ref: EcsDefaultClusterMnL3mNNYNVpcPrivateSubnet1Subnet075EFF4C
            - Ref: EcsDefaultClusterMnL3mNNYNVpcPrivateSubnet2SubnetE4CEDF73
    DependsOn:
      - loadbalancerPublicListenerECSGroup4FB31324
      - loadbalancerPublicListener860D2FC5
    Metadata:
      aws:cdk:path: MySubStack/Fargate/Service/Service
  FargateServiceSecurityGroup08F9A07A:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: MySubStack/Fargate/Service/SecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: EcsDefaultClusterMnL3mNNYNVpc7788A521
    Metadata:
      aws:cdk:path: MySubStack/Fargate/Service/SecurityGroup/Resource
  FargateServiceSecurityGroupfromMySubStackloadbalancerSecurityGroup7B28C74B8022275598:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: Load balancer to target
      FromPort: 80
      GroupId:
        Fn::GetAtt:
          - FargateServiceSecurityGroup08F9A07A
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - loadbalancerSecurityGroup2D54D16B
          - GroupId
      ToPort: 80
    Metadata:
      aws:cdk:path: MySubStack/Fargate/Service/SecurityGroup/from MySubStackloadbalancerSecurityGroup7B28C74B:80
  FargateServiceTaskCountTarget703B1FF4:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Properties:
      MaxCapacity: 5
      MinCapacity: 1
      ResourceId:
        Fn::Join:
          - ""
          - - service/
            - Ref: EcsDefaultClusterMnL3mNNYN926A5246
            - /
            - Fn::GetAtt:
                - FargateService1DAE5452
                - Name
      RoleARN:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":iam::"
            - Ref: AWS::AccountId
            - :role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService
      ScalableDimension: ecs:service:DesiredCount
      ServiceNamespace: ecs
    Metadata:
      aws:cdk:path: MySubStack/Fargate/Service/TaskCount/Target/Resource
  FargateServiceTaskCountTargetCpuScalingF027833F:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties:
      PolicyName: MySubStackFargateServiceTaskCountTargetCpuScalingD8F42632
      PolicyType: TargetTrackingScaling
      ScalingTargetId:
        Ref: FargateServiceTaskCountTarget703B1FF4
      TargetTrackingScalingPolicyConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: ECSServiceAverageCPUUtilization
        TargetValue: 75
    Metadata:
      aws:cdk:path: MySubStack/Fargate/Service/TaskCount/Target/CpuScaling/Resource
  EcsDefaultClusterMnL3mNNYN926A5246:
    Type: AWS::ECS::Cluster
    Metadata:
      aws:cdk:path: MySubStack/EcsDefaultClusterMnL3mNNYN/Resource
  EcsDefaultClusterMnL3mNNYNVpc7788A521:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: MySubStack/EcsDefaultClusterMnL3mNNYN/Vpc
    Metadata:
      aws:cdk:path: MySubStack/EcsDefaultClusterMnL3mNNYN/Vpc/Resource
  EcsDefaultClusterMnL3mNNYNVpcPublicSubnet1Subnet3C273B99:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.0/18
      VpcId:
        Ref: EcsDefaultClusterMnL3mNNYNVpc7788A521
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: MySubStack/EcsDefaultClusterMnL3mNNYN/Vpc/PublicSubnet1
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
    Metadata:
      aws:cdk:path: MySubStack/EcsDefaultClusterMnL3mNNYN/Vpc/PublicSubnet1/Subnet
  EcsDefaultClusterMnL3mNNYNVpcPublicSubnet1RouteTableA1FD6ACC:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: EcsDefaultClusterMnL3mNNYNVpc7788A521
      Tags:
        - Key: Name
          Value: MySubStack/EcsDefaultClusterMnL3mNNYN/Vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: MySubStack/EcsDefaultClusterMnL3mNNYN/Vpc/PublicSubnet1/RouteTable
  EcsDefaultClusterMnL3mNNYNVpcPublicSubnet1RouteTableAssociation8B583A17:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: EcsDefaultClusterMnL3mNNYNVpcPublicSubnet1RouteTableA1FD6ACC
      SubnetId:
        Ref: EcsDefaultClusterMnL3mNNYNVpcPublicSubnet1Subnet3C273B99
    Metadata:
      aws:cdk:path: MySubStack/EcsDefaultClusterMnL3mNNYN/Vpc/PublicSubnet1/RouteTableAssociation
  EcsDefaultClusterMnL3mNNYNVpcPublicSubnet1DefaultRouteFF4E2178:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: EcsDefaultClusterMnL3mNNYNVpcPublicSubnet1RouteTableA1FD6ACC
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: EcsDefaultClusterMnL3mNNYNVpcIGW9C2C2B8F
    DependsOn:
      - EcsDefaultClusterMnL3mNNYNVpcVPCGW2447264E
    Metadata:
      aws:cdk:path: MySubStack/EcsDefaultClusterMnL3mNNYN/Vpc/PublicSubnet1/DefaultRoute
  EcsDefaultClusterMnL3mNNYNVpcPublicSubnet1EIP8704DB2F:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
    Metadata:
      aws:cdk:path: MySubStack/EcsDefaultClusterMnL3mNNYN/Vpc/PublicSubnet1/EIP
  EcsDefaultClusterMnL3mNNYNVpcPublicSubnet1NATGateway5E3732C1:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - EcsDefaultClusterMnL3mNNYNVpcPublicSubnet1EIP8704DB2F
          - AllocationId
      SubnetId:
        Ref: EcsDefaultClusterMnL3mNNYNVpcPublicSubnet1Subnet3C273B99
      Tags:
        - Key: Name
          Value: MySubStack/EcsDefaultClusterMnL3mNNYN/Vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: MySubStack/EcsDefaultClusterMnL3mNNYN/Vpc/PublicSubnet1/NATGateway
  EcsDefaultClusterMnL3mNNYNVpcPublicSubnet2Subnet95FF715A:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.64.0/18
      VpcId:
        Ref: EcsDefaultClusterMnL3mNNYNVpc7788A521
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: MySubStack/EcsDefaultClusterMnL3mNNYN/Vpc/PublicSubnet2
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
    Metadata:
      aws:cdk:path: MySubStack/EcsDefaultClusterMnL3mNNYN/Vpc/PublicSubnet2/Subnet
  EcsDefaultClusterMnL3mNNYNVpcPublicSubnet2RouteTable263DEAA5:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: EcsDefaultClusterMnL3mNNYNVpc7788A521
      Tags:
        - Key: Name
          Value: MySubStack/EcsDefaultClusterMnL3mNNYN/Vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: MySubStack/EcsDefaultClusterMnL3mNNYN/Vpc/PublicSubnet2/RouteTable
  EcsDefaultClusterMnL3mNNYNVpcPublicSubnet2RouteTableAssociation43E5803C:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: EcsDefaultClusterMnL3mNNYNVpcPublicSubnet2RouteTable263DEAA5
      SubnetId:
        Ref: EcsDefaultClusterMnL3mNNYNVpcPublicSubnet2Subnet95FF715A
    Metadata:
      aws:cdk:path: MySubStack/EcsDefaultClusterMnL3mNNYN/Vpc/PublicSubnet2/RouteTableAssociation
  EcsDefaultClusterMnL3mNNYNVpcPublicSubnet2DefaultRouteB1375520:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: EcsDefaultClusterMnL3mNNYNVpcPublicSubnet2RouteTable263DEAA5
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: EcsDefaultClusterMnL3mNNYNVpcIGW9C2C2B8F
    DependsOn:
      - EcsDefaultClusterMnL3mNNYNVpcVPCGW2447264E
    Metadata:
      aws:cdk:path: MySubStack/EcsDefaultClusterMnL3mNNYN/Vpc/PublicSubnet2/DefaultRoute
  EcsDefaultClusterMnL3mNNYNVpcPublicSubnet2EIPF0764873:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
    Metadata:
      aws:cdk:path: MySubStack/EcsDefaultClusterMnL3mNNYN/Vpc/PublicSubnet2/EIP
  EcsDefaultClusterMnL3mNNYNVpcPublicSubnet2NATGateway4C855E00:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - EcsDefaultClusterMnL3mNNYNVpcPublicSubnet2EIPF0764873
          - AllocationId
      SubnetId:
        Ref: EcsDefaultClusterMnL3mNNYNVpcPublicSubnet2Subnet95FF715A
      Tags:
        - Key: Name
          Value: MySubStack/EcsDefaultClusterMnL3mNNYN/Vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: MySubStack/EcsDefaultClusterMnL3mNNYN/Vpc/PublicSubnet2/NATGateway
  EcsDefaultClusterMnL3mNNYNVpcPrivateSubnet1Subnet075EFF4C:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.128.0/18
      VpcId:
        Ref: EcsDefaultClusterMnL3mNNYNVpc7788A521
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: MySubStack/EcsDefaultClusterMnL3mNNYN/Vpc/PrivateSubnet1
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
    Metadata:
      aws:cdk:path: MySubStack/EcsDefaultClusterMnL3mNNYN/Vpc/PrivateSubnet1/Subnet
  EcsDefaultClusterMnL3mNNYNVpcPrivateSubnet1RouteTable4F1D2E36:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: EcsDefaultClusterMnL3mNNYNVpc7788A521
      Tags:
        - Key: Name
          Value: MySubStack/EcsDefaultClusterMnL3mNNYN/Vpc/PrivateSubnet1
    Metadata:
      aws:cdk:path: MySubStack/EcsDefaultClusterMnL3mNNYN/Vpc/PrivateSubnet1/RouteTable
  EcsDefaultClusterMnL3mNNYNVpcPrivateSubnet1RouteTableAssociation34B92275:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: EcsDefaultClusterMnL3mNNYNVpcPrivateSubnet1RouteTable4F1D2E36
      SubnetId:
        Ref: EcsDefaultClusterMnL3mNNYNVpcPrivateSubnet1Subnet075EFF4C
    Metadata:
      aws:cdk:path: MySubStack/EcsDefaultClusterMnL3mNNYN/Vpc/PrivateSubnet1/RouteTableAssociation
  EcsDefaultClusterMnL3mNNYNVpcPrivateSubnet1DefaultRouteA5ADF694:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: EcsDefaultClusterMnL3mNNYNVpcPrivateSubnet1RouteTable4F1D2E36
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: EcsDefaultClusterMnL3mNNYNVpcPublicSubnet1NATGateway5E3732C1
    Metadata:
      aws:cdk:path: MySubStack/EcsDefaultClusterMnL3mNNYN/Vpc/PrivateSubnet1/DefaultRoute
  EcsDefaultClusterMnL3mNNYNVpcPrivateSubnet2SubnetE4CEDF73:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.192.0/18
      VpcId:
        Ref: EcsDefaultClusterMnL3mNNYNVpc7788A521
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: MySubStack/EcsDefaultClusterMnL3mNNYN/Vpc/PrivateSubnet2
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
    Metadata:
      aws:cdk:path: MySubStack/EcsDefaultClusterMnL3mNNYN/Vpc/PrivateSubnet2/Subnet
  EcsDefaultClusterMnL3mNNYNVpcPrivateSubnet2RouteTableDCE46591:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: EcsDefaultClusterMnL3mNNYNVpc7788A521
      Tags:
        - Key: Name
          Value: MySubStack/EcsDefaultClusterMnL3mNNYN/Vpc/PrivateSubnet2
    Metadata:
      aws:cdk:path: MySubStack/EcsDefaultClusterMnL3mNNYN/Vpc/PrivateSubnet2/RouteTable
  EcsDefaultClusterMnL3mNNYNVpcPrivateSubnet2RouteTableAssociation111C622F:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: EcsDefaultClusterMnL3mNNYNVpcPrivateSubnet2RouteTableDCE46591
      SubnetId:
        Ref: EcsDefaultClusterMnL3mNNYNVpcPrivateSubnet2SubnetE4CEDF73
    Metadata:
      aws:cdk:path: MySubStack/EcsDefaultClusterMnL3mNNYN/Vpc/PrivateSubnet2/RouteTableAssociation
  EcsDefaultClusterMnL3mNNYNVpcPrivateSubnet2DefaultRoute20CE2D89:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: EcsDefaultClusterMnL3mNNYNVpcPrivateSubnet2RouteTableDCE46591
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: EcsDefaultClusterMnL3mNNYNVpcPublicSubnet2NATGateway4C855E00
    Metadata:
      aws:cdk:path: MySubStack/EcsDefaultClusterMnL3mNNYN/Vpc/PrivateSubnet2/DefaultRoute
  EcsDefaultClusterMnL3mNNYNVpcIGW9C2C2B8F:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: MySubStack/EcsDefaultClusterMnL3mNNYN/Vpc
    Metadata:
      aws:cdk:path: MySubStack/EcsDefaultClusterMnL3mNNYN/Vpc/IGW
  EcsDefaultClusterMnL3mNNYNVpcVPCGW2447264E:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: EcsDefaultClusterMnL3mNNYNVpc7788A521
      InternetGatewayId:
        Ref: EcsDefaultClusterMnL3mNNYNVpcIGW9C2C2B8F
    Metadata:
      aws:cdk:path: MySubStack/EcsDefaultClusterMnL3mNNYN/Vpc/VPCGW
  Repository22E53BBD:
    Type: AWS::CodeCommit::Repository
    Properties:
      RepositoryName: my_repository
    Metadata:
      aws:cdk:path: MySubStack/Repository/Resource
  RepositoryMySubStackPipeline5D732CB8EventRuleC9BD59C7:
    Type: AWS::Events::Rule
    Properties:
      EventPattern:
        source:
          - aws.codecommit
        resources:
          - Fn::GetAtt:
              - Repository22E53BBD
              - Arn
        detail-type:
          - CodeCommit Repository State Change
        detail:
          event:
            - referenceCreated
            - referenceUpdated
          referenceName:
            - master
      State: ENABLED
      Targets:
        - Arn:
            Fn::Join:
              - ""
              - - "arn:"
                - Ref: AWS::Partition
                - ":codepipeline:"
                - Ref: AWS::Region
                - ":"
                - Ref: AWS::AccountId
                - ":"
                - Ref: PipelineC660917D
          Id: Target0
          RoleArn:
            Fn::GetAtt:
              - PipelineEventsRole46BEEA7C
              - Arn
    Metadata:
      aws:cdk:path: MySubStack/Repository/MySubStackPipeline5D732CB8EventRule/Resource
  ProjectRole4CCB274E:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: MySubStack/Project/Role/Resource
  ProjectRoleDefaultPolicy7F29461B:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: codecommit:GitPull
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - Repository22E53BBD
                - Arn
          - Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":logs:"
                    - Ref: AWS::Region
                    - ":"
                    - Ref: AWS::AccountId
                    - :log-group:/aws/codebuild/
                    - Ref: ProjectC78D97AD
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":logs:"
                    - Ref: AWS::Region
                    - ":"
                    - Ref: AWS::AccountId
                    - :log-group:/aws/codebuild/
                    - Ref: ProjectC78D97AD
                    - :*
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
              - s3:DeleteObject*
              - s3:PutObject*
              - s3:Abort*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - PipelineArtifactsBucket22248F97
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - PipelineArtifactsBucket22248F97
                        - Arn
                    - /*
          - Action:
              - kms:Decrypt
              - kms:DescribeKey
              - kms:Encrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - PipelineArtifactsBucketEncryptionKey01D58D69
                - Arn
          - Action:
              - kms:Decrypt
              - kms:Encrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - PipelineArtifactsBucketEncryptionKey01D58D69
                - Arn
        Version: "2012-10-17"
      PolicyName: ProjectRoleDefaultPolicy7F29461B
      Roles:
        - Ref: ProjectRole4CCB274E
    Metadata:
      aws:cdk:path: MySubStack/Project/Role/DefaultPolicy/Resource
  ProjectC78D97AD:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: NO_ARTIFACTS
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:1.0
        PrivilegedMode: false
        Type: LINUX_CONTAINER
      ServiceRole:
        Fn::GetAtt:
          - ProjectRole4CCB274E
          - Arn
      Source:
        BuildSpec: push-to-ecr.yml
        Location:
          Fn::GetAtt:
            - Repository22E53BBD
            - CloneUrlHttp
        Type: CODECOMMIT
      EncryptionKey:
        Fn::GetAtt:
          - PipelineArtifactsBucketEncryptionKey01D58D69
          - Arn
    Metadata:
      aws:cdk:path: MySubStack/Project/Resource
  PipelineArtifactsBucketEncryptionKey01D58D69:
    Type: AWS::KMS::Key
    Properties:
      KeyPolicy:
        Statement:
          - Action:
              - kms:Create*
              - kms:Describe*
              - kms:Enable*
              - kms:List*
              - kms:Put*
              - kms:Update*
              - kms:Revoke*
              - kms:Disable*
              - kms:Get*
              - kms:Delete*
              - kms:ScheduleKeyDeletion
              - kms:CancelKeyDeletion
              - kms:GenerateDataKey
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":iam::"
                    - Ref: AWS::AccountId
                    - :root
            Resource: "*"
          - Action:
              - kms:Decrypt
              - kms:DescribeKey
              - kms:Encrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
            Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt:
                  - PipelineRoleD68726F7
                  - Arn
            Resource: "*"
          - Action:
              - kms:Decrypt
              - kms:DescribeKey
              - kms:Encrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
            Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt:
                  - PipelineSourceCommitCodePipelineActionRoleA78278D1
                  - Arn
            Resource: "*"
          - Action:
              - kms:Decrypt
              - kms:DescribeKey
              - kms:Encrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
            Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt:
                  - ProjectRole4CCB274E
                  - Arn
            Resource: "*"
          - Action:
              - kms:Decrypt
              - kms:Encrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
            Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt:
                  - ProjectRole4CCB274E
                  - Arn
            Resource: "*"
        Version: "2012-10-17"
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: MySubStack/Pipeline/ArtifactsBucketEncryptionKey/Resource
  PipelineArtifactsBucket22248F97:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              KMSMasterKeyID:
                Fn::GetAtt:
                  - PipelineArtifactsBucketEncryptionKey01D58D69
                  - Arn
              SSEAlgorithm: aws:kms
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: MySubStack/Pipeline/ArtifactsBucket/Resource
  PipelineArtifactsBucketEncryptionKeyAlias5C510EEE:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: alias/codepipeline-mysubstackpipeline5d732cb8
      TargetKeyId:
        Fn::GetAtt:
          - PipelineArtifactsBucketEncryptionKey01D58D69
          - Arn
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: MySubStack/Pipeline/ArtifactsBucketEncryptionKeyAlias/Resource
  PipelineRoleD68726F7:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: MySubStack/Pipeline/Role/Resource
  PipelineRoleDefaultPolicyC7A05455:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
              - s3:DeleteObject*
              - s3:PutObject*
              - s3:Abort*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - PipelineArtifactsBucket22248F97
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - PipelineArtifactsBucket22248F97
                        - Arn
                    - /*
          - Action:
              - kms:Decrypt
              - kms:DescribeKey
              - kms:Encrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - PipelineArtifactsBucketEncryptionKey01D58D69
                - Arn
          - Action: sts:AssumeRole
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - PipelineSourceCommitCodePipelineActionRoleA78278D1
                - Arn
          - Action: sts:AssumeRole
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - PipelineBuildCodePipelineActionRoleD77A08E6
                - Arn
        Version: "2012-10-17"
      PolicyName: PipelineRoleDefaultPolicyC7A05455
      Roles:
        - Ref: PipelineRoleD68726F7
    Metadata:
      aws:cdk:path: MySubStack/Pipeline/Role/DefaultPolicy/Resource
  PipelineC660917D:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn:
        Fn::GetAtt:
          - PipelineRoleD68726F7
          - Arn
      Stages:
        - Actions:
            - ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeCommit
                Version: "1"
              Configuration:
                RepositoryName:
                  Fn::GetAtt:
                    - Repository22E53BBD
                    - Name
                BranchName: master
                PollForSourceChanges: false
              Name: Commit
              OutputArtifacts:
                - Name: Artifact_Source_Commit
              RoleArn:
                Fn::GetAtt:
                  - PipelineSourceCommitCodePipelineActionRoleA78278D1
                  - Arn
              RunOrder: 1
          Name: Source
        - Actions:
            - ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                ProjectName:
                  Ref: ProjectC78D97AD
              InputArtifacts:
                - Name: Artifact_Source_Commit
              Name: Build
              OutputArtifacts:
                - Name: BuildArtifact
              RoleArn:
                Fn::GetAtt:
                  - PipelineBuildCodePipelineActionRoleD77A08E6
                  - Arn
              RunOrder: 1
          Name: Build
      ArtifactStore:
        EncryptionKey:
          Id:
            Fn::GetAtt:
              - PipelineArtifactsBucketEncryptionKey01D58D69
              - Arn
          Type: KMS
        Location:
          Ref: PipelineArtifactsBucket22248F97
        Type: S3
    DependsOn:
      - PipelineRoleDefaultPolicyC7A05455
      - PipelineRoleD68726F7
    Metadata:
      aws:cdk:path: MySubStack/Pipeline/Resource
  PipelineSourceCommitCodePipelineActionRoleA78278D1:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":iam::"
                    - Ref: AWS::AccountId
                    - :root
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: MySubStack/Pipeline/Source/Commit/CodePipelineActionRole/Resource
  PipelineSourceCommitCodePipelineActionRoleDefaultPolicyDF82B33D:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
              - s3:DeleteObject*
              - s3:PutObject*
              - s3:Abort*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - PipelineArtifactsBucket22248F97
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - PipelineArtifactsBucket22248F97
                        - Arn
                    - /*
          - Action:
              - kms:Decrypt
              - kms:DescribeKey
              - kms:Encrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - PipelineArtifactsBucketEncryptionKey01D58D69
                - Arn
          - Action:
              - codecommit:GetBranch
              - codecommit:GetCommit
              - codecommit:UploadArchive
              - codecommit:GetUploadArchiveStatus
              - codecommit:CancelUploadArchive
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - Repository22E53BBD
                - Arn
        Version: "2012-10-17"
      PolicyName: PipelineSourceCommitCodePipelineActionRoleDefaultPolicyDF82B33D
      Roles:
        - Ref: PipelineSourceCommitCodePipelineActionRoleA78278D1
    Metadata:
      aws:cdk:path: MySubStack/Pipeline/Source/Commit/CodePipelineActionRole/DefaultPolicy/Resource
  PipelineEventsRole46BEEA7C:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: events.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: MySubStack/Pipeline/EventsRole/Resource
  PipelineEventsRoleDefaultPolicyFF4FCCE0:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: codepipeline:StartPipelineExecution
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":codepipeline:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - ":"
                  - Ref: PipelineC660917D
        Version: "2012-10-17"
      PolicyName: PipelineEventsRoleDefaultPolicyFF4FCCE0
      Roles:
        - Ref: PipelineEventsRole46BEEA7C
    Metadata:
      aws:cdk:path: MySubStack/Pipeline/EventsRole/DefaultPolicy/Resource
  PipelineBuildCodePipelineActionRoleD77A08E6:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":iam::"
                    - Ref: AWS::AccountId
                    - :root
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: MySubStack/Pipeline/Build/Build/CodePipelineActionRole/Resource
  PipelineBuildCodePipelineActionRoleDefaultPolicyC9CB73F8:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - codebuild:BatchGetBuilds
              - codebuild:StartBuild
              - codebuild:StopBuild
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - ProjectC78D97AD
                - Arn
        Version: "2012-10-17"
      PolicyName: PipelineBuildCodePipelineActionRoleDefaultPolicyC9CB73F8
      Roles:
        - Ref: PipelineBuildCodePipelineActionRoleD77A08E6
    Metadata:
      aws:cdk:path: MySubStack/Pipeline/Build/Build/CodePipelineActionRole/DefaultPolicy/Resource
  EcrRepoBB83A592:
    Type: AWS::ECR::Repository
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: MySubStack/EcrRepo/Resource
  EcrRepoMySubStackSecPipelineDFE7BC8FSourceEventRule9A963F81:
    Type: AWS::Events::Rule
    Properties:
      EventPattern:
        source:
          - aws.ecr
        detail-type:
          - AWS API Call via CloudTrail
        detail:
          requestParameters:
            repositoryName:
              - Ref: EcrRepoBB83A592
          eventName:
            - PutImage
      State: ENABLED
      Targets:
        - Arn:
            Fn::Join:
              - ""
              - - "arn:"
                - Ref: AWS::Partition
                - ":codepipeline:"
                - Ref: AWS::Region
                - ":"
                - Ref: AWS::AccountId
                - ":"
                - Ref: SecPipelineEE53E65C
          Id: Target0
          RoleArn:
            Fn::GetAtt:
              - SecPipelineEventsRole3E019A4C
              - Arn
    Metadata:
      aws:cdk:path: MySubStack/EcrRepo/MySubStackSecPipelineDFE7BC8FSourceEventRule/Resource
  BuildProjectRoleAA92C755:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: MySubStack/BuildProject/Role/Resource
  BuildProjectRoleDefaultPolicy3E9F248C:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":logs:"
                    - Ref: AWS::Region
                    - ":"
                    - Ref: AWS::AccountId
                    - :log-group:/aws/codebuild/
                    - Ref: BuildProject097C5DB7
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":logs:"
                    - Ref: AWS::Region
                    - ":"
                    - Ref: AWS::AccountId
                    - :log-group:/aws/codebuild/
                    - Ref: BuildProject097C5DB7
                    - :*
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
              - s3:DeleteObject*
              - s3:PutObject*
              - s3:Abort*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - SecPipelineArtifactsBucket38820448
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - SecPipelineArtifactsBucket38820448
                        - Arn
                    - /*
          - Action:
              - kms:Decrypt
              - kms:DescribeKey
              - kms:Encrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - SecPipelineArtifactsBucketEncryptionKey3221CB6B
                - Arn
          - Action:
              - kms:Decrypt
              - kms:Encrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - SecPipelineArtifactsBucketEncryptionKey3221CB6B
                - Arn
        Version: "2012-10-17"
      PolicyName: BuildProjectRoleDefaultPolicy3E9F248C
      Roles:
        - Ref: BuildProjectRoleAA92C755
    Metadata:
      aws:cdk:path: MySubStack/BuildProject/Role/DefaultPolicy/Resource
  BuildProject097C5DB7:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: NO_ARTIFACTS
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:1.0
        PrivilegedMode: false
        Type: LINUX_CONTAINER
      ServiceRole:
        Fn::GetAtt:
          - BuildProjectRoleAA92C755
          - Arn
      Source:
        BuildSpec: >-
          {
            "deploy": "deploy"
          }
        Type: NO_SOURCE
      EncryptionKey:
        Fn::GetAtt:
          - SecPipelineArtifactsBucketEncryptionKey3221CB6B
          - Arn
    Metadata:
      aws:cdk:path: MySubStack/BuildProject/Resource
  SecPipelineArtifactsBucketEncryptionKey3221CB6B:
    Type: AWS::KMS::Key
    Properties:
      KeyPolicy:
        Statement:
          - Action:
              - kms:Create*
              - kms:Describe*
              - kms:Enable*
              - kms:List*
              - kms:Put*
              - kms:Update*
              - kms:Revoke*
              - kms:Disable*
              - kms:Get*
              - kms:Delete*
              - kms:ScheduleKeyDeletion
              - kms:CancelKeyDeletion
              - kms:GenerateDataKey
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":iam::"
                    - Ref: AWS::AccountId
                    - :root
            Resource: "*"
          - Action:
              - kms:Decrypt
              - kms:DescribeKey
              - kms:Encrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
            Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt:
                  - SecPipelineRole3F0F17F6
                  - Arn
            Resource: "*"
          - Action:
              - kms:Encrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
            Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt:
                  - SecPipelineSecSourceCodePipelineActionRole8CE79C74
                  - Arn
            Resource: "*"
          - Action:
              - kms:Decrypt
              - kms:DescribeKey
              - kms:Encrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
            Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt:
                  - BuildProjectRoleAA92C755
                  - Arn
            Resource: "*"
          - Action:
              - kms:Decrypt
              - kms:Encrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
            Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt:
                  - BuildProjectRoleAA92C755
                  - Arn
            Resource: "*"
          - Action:
              - kms:Decrypt
              - kms:DescribeKey
            Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt:
                  - SecPipelineSecDeployCodePipelineActionRoleB9B541C0
                  - Arn
            Resource: "*"
        Version: "2012-10-17"
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: MySubStack/SecPipeline/ArtifactsBucketEncryptionKey/Resource
  SecPipelineArtifactsBucket38820448:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              KMSMasterKeyID:
                Fn::GetAtt:
                  - SecPipelineArtifactsBucketEncryptionKey3221CB6B
                  - Arn
              SSEAlgorithm: aws:kms
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: MySubStack/SecPipeline/ArtifactsBucket/Resource
  SecPipelineArtifactsBucketEncryptionKeyAliasDBA5723C:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: alias/codepipeline-mysubstacksecpipelinedfe7bc8f
      TargetKeyId:
        Fn::GetAtt:
          - SecPipelineArtifactsBucketEncryptionKey3221CB6B
          - Arn
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: MySubStack/SecPipeline/ArtifactsBucketEncryptionKeyAlias/Resource
  SecPipelineRole3F0F17F6:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: MySubStack/SecPipeline/Role/Resource
  SecPipelineRoleDefaultPolicy7EE5F715:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
              - s3:DeleteObject*
              - s3:PutObject*
              - s3:Abort*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - SecPipelineArtifactsBucket38820448
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - SecPipelineArtifactsBucket38820448
                        - Arn
                    - /*
          - Action:
              - kms:Decrypt
              - kms:DescribeKey
              - kms:Encrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - SecPipelineArtifactsBucketEncryptionKey3221CB6B
                - Arn
          - Action: sts:AssumeRole
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - SecPipelineSecSourceCodePipelineActionRole8CE79C74
                - Arn
          - Action: sts:AssumeRole
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - SecPipelineSecBuildCodePipelineActionRole79DCE4B3
                - Arn
          - Action: sts:AssumeRole
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - SecPipelineSecDeployCodePipelineActionRoleB9B541C0
                - Arn
        Version: "2012-10-17"
      PolicyName: SecPipelineRoleDefaultPolicy7EE5F715
      Roles:
        - Ref: SecPipelineRole3F0F17F6
    Metadata:
      aws:cdk:path: MySubStack/SecPipeline/Role/DefaultPolicy/Resource
  SecPipelineEE53E65C:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn:
        Fn::GetAtt:
          - SecPipelineRole3F0F17F6
          - Arn
      Stages:
        - Actions:
            - ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: ECR
                Version: "1"
              Configuration:
                RepositoryName:
                  Ref: EcrRepoBB83A592
              Name: Source
              OutputArtifacts:
                - Name: Artifact_SecSource_Source
              RoleArn:
                Fn::GetAtt:
                  - SecPipelineSecSourceCodePipelineActionRole8CE79C74
                  - Arn
              RunOrder: 1
          Name: SecSource
        - Actions:
            - ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                ProjectName:
                  Ref: BuildProject097C5DB7
              InputArtifacts:
                - Name: Artifact_SecSource_Source
              Name: Build
              OutputArtifacts:
                - Name: BuildArtifact
              RoleArn:
                Fn::GetAtt:
                  - SecPipelineSecBuildCodePipelineActionRole79DCE4B3
                  - Arn
              RunOrder: 1
          Name: SecBuild
        - Actions:
            - ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: ECS
                Version: "1"
              Configuration:
                ClusterName:
                  Ref: EcsDefaultClusterMnL3mNNYN926A5246
                ServiceName:
                  Fn::GetAtt:
                    - FargateService1DAE5452
                    - Name
              InputArtifacts:
                - Name: BuildArtifact
              Name: Deploy
              RoleArn:
                Fn::GetAtt:
                  - SecPipelineSecDeployCodePipelineActionRoleB9B541C0
                  - Arn
              RunOrder: 1
          Name: SecDeploy
      ArtifactStore:
        EncryptionKey:
          Id:
            Fn::GetAtt:
              - SecPipelineArtifactsBucketEncryptionKey3221CB6B
              - Arn
          Type: KMS
        Location:
          Ref: SecPipelineArtifactsBucket38820448
        Type: S3
    DependsOn:
      - SecPipelineRoleDefaultPolicy7EE5F715
      - SecPipelineRole3F0F17F6
    Metadata:
      aws:cdk:path: MySubStack/SecPipeline/Resource
  SecPipelineSecSourceCodePipelineActionRole8CE79C74:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":iam::"
                    - Ref: AWS::AccountId
                    - :root
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: MySubStack/SecPipeline/SecSource/Source/CodePipelineActionRole/Resource
  SecPipelineSecSourceCodePipelineActionRoleDefaultPolicyE5FBE06E:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: ecr:DescribeImages
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - EcrRepoBB83A592
                - Arn
          - Action:
              - s3:DeleteObject*
              - s3:PutObject*
              - s3:Abort*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - SecPipelineArtifactsBucket38820448
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - SecPipelineArtifactsBucket38820448
                        - Arn
                    - /*
          - Action:
              - kms:Encrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - SecPipelineArtifactsBucketEncryptionKey3221CB6B
                - Arn
        Version: "2012-10-17"
      PolicyName: SecPipelineSecSourceCodePipelineActionRoleDefaultPolicyE5FBE06E
      Roles:
        - Ref: SecPipelineSecSourceCodePipelineActionRole8CE79C74
    Metadata:
      aws:cdk:path: MySubStack/SecPipeline/SecSource/Source/CodePipelineActionRole/DefaultPolicy/Resource
  SecPipelineEventsRole3E019A4C:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: events.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: MySubStack/SecPipeline/EventsRole/Resource
  SecPipelineEventsRoleDefaultPolicyF16EFD57:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: codepipeline:StartPipelineExecution
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":codepipeline:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - ":"
                  - Ref: SecPipelineEE53E65C
        Version: "2012-10-17"
      PolicyName: SecPipelineEventsRoleDefaultPolicyF16EFD57
      Roles:
        - Ref: SecPipelineEventsRole3E019A4C
    Metadata:
      aws:cdk:path: MySubStack/SecPipeline/EventsRole/DefaultPolicy/Resource
  SecPipelineSecBuildCodePipelineActionRole79DCE4B3:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":iam::"
                    - Ref: AWS::AccountId
                    - :root
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: MySubStack/SecPipeline/SecBuild/Build/CodePipelineActionRole/Resource
  SecPipelineSecBuildCodePipelineActionRoleDefaultPolicyF9A320A7:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - codebuild:BatchGetBuilds
              - codebuild:StartBuild
              - codebuild:StopBuild
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - BuildProject097C5DB7
                - Arn
        Version: "2012-10-17"
      PolicyName: SecPipelineSecBuildCodePipelineActionRoleDefaultPolicyF9A320A7
      Roles:
        - Ref: SecPipelineSecBuildCodePipelineActionRole79DCE4B3
    Metadata:
      aws:cdk:path: MySubStack/SecPipeline/SecBuild/Build/CodePipelineActionRole/DefaultPolicy/Resource
  SecPipelineSecDeployCodePipelineActionRoleB9B541C0:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":iam::"
                    - Ref: AWS::AccountId
                    - :root
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: MySubStack/SecPipeline/SecDeploy/Deploy/CodePipelineActionRole/Resource
  SecPipelineSecDeployCodePipelineActionRoleDefaultPolicyC7EBBA29:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - ecs:DescribeServices
              - ecs:DescribeTaskDefinition
              - ecs:DescribeTasks
              - ecs:ListTasks
              - ecs:RegisterTaskDefinition
              - ecs:UpdateService
            Effect: Allow
            Resource: "*"
          - Action: iam:PassRole
            Condition:
              StringEqualsIfExists:
                iam:PassedToService:
                  - ec2.amazonaws.com
                  - ecs-tasks.amazonaws.com
            Effect: Allow
            Resource: "*"
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - SecPipelineArtifactsBucket38820448
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - SecPipelineArtifactsBucket38820448
                        - Arn
                    - /*
          - Action:
              - kms:Decrypt
              - kms:DescribeKey
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - SecPipelineArtifactsBucketEncryptionKey3221CB6B
                - Arn
        Version: "2012-10-17"
      PolicyName: SecPipelineSecDeployCodePipelineActionRoleDefaultPolicyC7EBBA29
      Roles:
        - Ref: SecPipelineSecDeployCodePipelineActionRoleB9B541C0
    Metadata:
      aws:cdk:path: MySubStack/SecPipeline/SecDeploy/Deploy/CodePipelineActionRole/DefaultPolicy/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Modules: aws-cdk=1.16.0,@aws-cdk/assets=1.18.0,@aws-cdk/aws-apigateway=1.18.0,@aws-cdk/aws-applicationautoscaling=1.18.0,@aws-cdk/aws-autoscaling=1.18.0,@aws-cdk/aws-autoscaling-common=1.18.0,@aws-cdk/aws-autoscaling-hooktargets=1.18.0,@aws-cdk/aws-certificatemanager=1.18.0,@aws-cdk/aws-cloudformation=1.18.0,@aws-cdk/aws-cloudfront=1.18.0,@aws-cdk/aws-cloudwatch=1.18.0,@aws-cdk/aws-codebuild=1.18.0,@aws-cdk/aws-codecommit=1.18.0,@aws-cdk/aws-codedeploy=1.18.0,@aws-cdk/aws-codepipeline=1.18.0,@aws-cdk/aws-codepipeline-actions=1.18.0,@aws-cdk/aws-ec2=1.18.0,@aws-cdk/aws-ecr=1.18.0,@aws-cdk/aws-ecr-assets=1.18.0,@aws-cdk/aws-ecs=1.18.0,@aws-cdk/aws-ecs-patterns=1.18.0,@aws-cdk/aws-elasticloadbalancing=1.18.0,@aws-cdk/aws-elasticloadbalancingv2=1.18.0,@aws-cdk/aws-events=1.18.0,@aws-cdk/aws-events-targets=1.18.0,@aws-cdk/aws-iam=1.18.0,@aws-cdk/aws-kms=1.18.0,@aws-cdk/aws-lambda=1.18.0,@aws-cdk/aws-logs=1.18.0,@aws-cdk/aws-route53=1.18.0,@aws-cdk/aws-route53-targets=1.18.0,@aws-cdk/aws-s3=1.18.0,@aws-cdk/aws-s3-assets=1.18.0,@aws-cdk/aws-secretsmanager=1.18.0,@aws-cdk/aws-servicediscovery=1.18.0,@aws-cdk/aws-sns=1.18.0,@aws-cdk/aws-sns-subscriptions=1.18.0,@aws-cdk/aws-sqs=1.18.0,@aws-cdk/aws-ssm=1.18.0,@aws-cdk/aws-stepfunctions=1.18.0,@aws-cdk/core=1.18.0,@aws-cdk/cx-api=1.18.0,@aws-cdk/region-info=1.18.0,jsii-runtime=Python/3.6.8
    Condition: CDKMetadataAvailable
Outputs:
  FargateLoadBalancerDNSA8D33CCB:
    Value:
      Fn::GetAtt:
        - loadbalancer25023A58
        - DNSName
  FargateServiceURL8C558CA1:
    Value:
      Fn::Join:
        - ""
        - - http://
          - Fn::GetAtt:
              - loadbalancer25023A58
              - DNSName
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

